import{_ as s,c as a,a as p,o as e}from"./app-BtFOZcMJ.js";const t={};function l(c,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h1 id="spring-boot在三维数据处理系统中的应用实践-☕" tabindex="-1"><a class="header-anchor" href="#spring-boot在三维数据处理系统中的应用实践-☕"><span>Spring Boot在三维数据处理系统中的应用实践 ☕</span></a></h1><blockquote><p>将学术研究与工程实践结合，用Spring Boot构建高性能的三维数据处理后端服务</p></blockquote><h2 id="项目背景-🎯" tabindex="-1"><a class="header-anchor" href="#项目背景-🎯"><span>项目背景 🎯</span></a></h2><p>在进行三维重建研究的过程中，我发现需要一个稳定、高效的后端系统来处理大量的三维数据。传统的Python脚本虽然在算法原型开发中很方便，但在处理并发请求和大规模数据时性能有限。因此，我决定使用Spring Boot构建一个专门的三维数据处理系统。</p><h2 id="系统架构设计-🏗️" tabindex="-1"><a class="header-anchor" href="#系统架构设计-🏗️"><span>系统架构设计 🏗️</span></a></h2><h3 id="整体架构" tabindex="-1"><a class="header-anchor" href="#整体架构"><span>整体架构</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐</span>
<span class="line">│   前端Web界面    │    │   移动端App     │    │   第三方API     │</span>
<span class="line">└─────────────────┘    └─────────────────┘    └─────────────────┘</span>
<span class="line">         │                       │                       │</span>
<span class="line">         └───────────────────────┼───────────────────────┘</span>
<span class="line">                                 │</span>
<span class="line">                    ┌─────────────────┐</span>
<span class="line">                    │   API Gateway   │</span>
<span class="line">                    └─────────────────┘</span>
<span class="line">                                 │</span>
<span class="line">         ┌───────────────────────┼───────────────────────┐</span>
<span class="line">         │                       │                       │</span>
<span class="line">┌─────────────────┐    ┌─────────────────┐    ┌─────────────────┐</span>
<span class="line">│   用户服务       │    │   数据处理服务   │    │   文件服务       │</span>
<span class="line">└─────────────────┘    └─────────────────┘    └─────────────────┘</span>
<span class="line">         │                       │                       │</span>
<span class="line">         └───────────────────────┼───────────────────────┘</span>
<span class="line">                                 │</span>
<span class="line">                    ┌─────────────────┐</span>
<span class="line">                    │   数据存储层     │</span>
<span class="line">                    └─────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="技术选型" tabindex="-1"><a class="header-anchor" href="#技术选型"><span>技术选型</span></a></h3><ul><li><strong>Web框架</strong>: Spring Boot 2.7.x</li><li><strong>数据库</strong>: MySQL 8.0 + Redis 6.x</li><li><strong>消息队列</strong>: RabbitMQ</li><li><strong>文件存储</strong>: MinIO</li><li><strong>监控</strong>: Micrometer + Prometheus</li></ul><h2 id="核心功能实现-⚡" tabindex="-1"><a class="header-anchor" href="#核心功能实现-⚡"><span>核心功能实现 ⚡</span></a></h2><h3 id="_1-异步文件上传处理" tabindex="-1"><a class="header-anchor" href="#_1-异步文件上传处理"><span>1. 异步文件上传处理</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@RestController</span></span>
<span class="line"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/api/v1/pointcloud&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PointCloudController</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">PointCloudService</span> pointCloudService<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/upload&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UploadResponse</span><span class="token punctuation">&gt;</span></span> <span class="token function">uploadPointCloud</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span> file<span class="token punctuation">,</span></span>
<span class="line">            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;algorithm&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> algorithm<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 参数验证</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isValidPointCloudFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">badRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UploadResponse</span><span class="token punctuation">(</span><span class="token string">&quot;不支持的文件格式&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 异步处理</span></span>
<span class="line">        <span class="token class-name">String</span> taskId <span class="token operator">=</span> pointCloudService<span class="token punctuation">.</span><span class="token function">processAsync</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> algorithm<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UploadResponse</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> <span class="token string">&quot;上传成功，正在处理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/status/{taskId}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessingStatus</span><span class="token punctuation">&gt;</span></span> <span class="token function">getProcessingStatus</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> taskId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ProcessingStatus</span> status <span class="token operator">=</span> pointCloudService<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-任务队列处理" tabindex="-1"><a class="header-anchor" href="#_2-任务队列处理"><span>2. 任务队列处理</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PointCloudProcessor</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>queues <span class="token operator">=</span> <span class="token string">&quot;pointcloud.processing&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">processPointCloud</span><span class="token punctuation">(</span><span class="token class-name">PointCloudTask</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 更新任务状态</span></span>
<span class="line">            <span class="token function">updateTaskStatus</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TaskStatus</span><span class="token punctuation">.</span><span class="token constant">PROCESSING</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// 调用Python算法处理</span></span>
<span class="line">            <span class="token class-name">ProcessResult</span> result <span class="token operator">=</span> <span class="token function">callPythonAlgorithm</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// 保存结果</span></span>
<span class="line">            <span class="token function">saveProcessingResult</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// 更新状态为完成</span></span>
<span class="line">            <span class="token function">updateTaskStatus</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TaskStatus</span><span class="token punctuation">.</span><span class="token constant">COMPLETED</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;处理点云数据失败: {}&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">updateTaskStatus</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TaskStatus</span><span class="token punctuation">.</span><span class="token constant">FAILED</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">ProcessResult</span> <span class="token function">callPythonAlgorithm</span><span class="token punctuation">(</span><span class="token class-name">PointCloudTask</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 使用ProcessBuilder调用Python脚本</span></span>
<span class="line">        <span class="token class-name">ProcessBuilder</span> pb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token string">&quot;python&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;algorithms/reconstruct.py&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;--input&quot;</span><span class="token punctuation">,</span> task<span class="token punctuation">.</span><span class="token function">getInputPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;--algorithm&quot;</span><span class="token punctuation">,</span> task<span class="token punctuation">.</span><span class="token function">getAlgorithm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;--output&quot;</span><span class="token punctuation">,</span> task<span class="token punctuation">.</span><span class="token function">getOutputPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 执行并返回结果</span></span>
<span class="line">        <span class="token class-name">Process</span> process <span class="token operator">=</span> pb<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">int</span> exitCode <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>exitCode <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ProcessResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> task<span class="token punctuation">.</span><span class="token function">getOutputPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;算法执行失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-配置优化" tabindex="-1"><a class="header-anchor" href="#_3-配置优化"><span>3. 配置优化</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token comment"># application.yml</span></span>
<span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">datasource</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/reconstruction_db</span>
<span class="line">    <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>DB_USERNAME<span class="token punctuation">:</span>admin<span class="token punctuation">}</span></span>
<span class="line">    <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>DB_PASSWORD<span class="token punctuation">:</span>password<span class="token punctuation">}</span></span>
<span class="line">    <span class="token key atrule">hikari</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">maximum-pool-size</span><span class="token punctuation">:</span> <span class="token number">20</span></span>
<span class="line">      <span class="token key atrule">minimum-idle</span><span class="token punctuation">:</span> <span class="token number">5</span></span>
<span class="line">      </span>
<span class="line">  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost</span>
<span class="line">    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span></span>
<span class="line">    <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>MQ_USERNAME<span class="token punctuation">:</span>guest<span class="token punctuation">}</span></span>
<span class="line">    <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>MQ_PASSWORD<span class="token punctuation">:</span>guest<span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">  <span class="token key atrule">servlet</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">multipart</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">max-file-size</span><span class="token punctuation">:</span> 500MB</span>
<span class="line">      <span class="token key atrule">max-request-size</span><span class="token punctuation">:</span> 500MB</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 自定义配置</span></span>
<span class="line"><span class="token key atrule">reconstruction</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">algorithms</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">poisson</span><span class="token punctuation">:</span> <span class="token string">&quot;algorithms/poisson_reconstruct.py&quot;</span></span>
<span class="line">    <span class="token key atrule">delaunay</span><span class="token punctuation">:</span> <span class="token string">&quot;algorithms/delaunay_reconstruct.py&quot;</span></span>
<span class="line">  <span class="token key atrule">storage</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">base-path</span><span class="token punctuation">:</span> <span class="token string">&quot;/data/reconstruction&quot;</span></span>
<span class="line">    <span class="token key atrule">temp-path</span><span class="token punctuation">:</span> <span class="token string">&quot;/tmp/reconstruction&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="性能优化策略-🚀" tabindex="-1"><a class="header-anchor" href="#性能优化策略-🚀"><span>性能优化策略 🚀</span></a></h2><h3 id="_1-内存管理" tabindex="-1"><a class="header-anchor" href="#_1-内存管理"><span>1. 内存管理</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PointCloudService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 使用对象池减少GC压力</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ObjectPool</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">PointCloudBuffer</span><span class="token punctuation">&gt;</span></span> bufferPool<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">ProcessingResult</span> <span class="token function">processLargePointCloud</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">PointCloudBuffer</span> buffer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            buffer <span class="token operator">=</span> bufferPool<span class="token punctuation">.</span><span class="token function">borrowObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// 分块处理大文件</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token function">processInChunks</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> buffer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>buffer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                bufferPool<span class="token punctuation">.</span><span class="token function">returnObject</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">ProcessingResult</span> <span class="token function">processInChunks</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">,</span> <span class="token class-name">PointCloudBuffer</span> buffer<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CHUNK_SIZE</span> <span class="token operator">=</span> <span class="token number">100000</span><span class="token punctuation">;</span> <span class="token comment">// 10万个点为一块</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newBufferedReader</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">String</span> line<span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point3D</span><span class="token punctuation">&gt;</span></span> chunk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token constant">CHUNK_SIZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Point3D</span> point <span class="token operator">=</span> <span class="token function">parsePoint</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                chunk<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                </span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token constant">CHUNK_SIZE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">processChunk</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> buffer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    chunk<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// 处理最后一块</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>chunk<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">processChunk</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> buffer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ProcessingResult</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-缓存策略" tabindex="-1"><a class="header-anchor" href="#_2-缓存策略"><span>2. 缓存策略</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token annotation punctuation">@EnableCaching</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AlgorithmService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Cacheable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;algorithms&quot;</span><span class="token punctuation">,</span> key <span class="token operator">=</span> <span class="token string">&quot;#algorithm + &#39;_&#39; + #parameters.hashCode()&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">AlgorithmConfig</span> <span class="token function">getAlgorithmConfig</span><span class="token punctuation">(</span><span class="token class-name">String</span> algorithm<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> parameters<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 从数据库加载算法配置</span></span>
<span class="line">        <span class="token keyword">return</span> algorithmRepository<span class="token punctuation">.</span><span class="token function">findByNameAndParameters</span><span class="token punctuation">(</span>algorithm<span class="token punctuation">,</span> parameters<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@CacheEvict</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;processing_results&quot;</span><span class="token punctuation">,</span> key <span class="token operator">=</span> <span class="token string">&quot;#taskId&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clearProcessingCache</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;清除任务缓存: {}&quot;</span><span class="token punctuation">,</span> taskId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="监控与日志-📊" tabindex="-1"><a class="header-anchor" href="#监控与日志-📊"><span>监控与日志 📊</span></a></h2><h3 id="_1-自定义指标" tabindex="-1"><a class="header-anchor" href="#_1-自定义指标"><span>1. 自定义指标</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProcessingMetrics</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Counter</span> processedFiles<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Timer</span> processingTime<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Gauge</span> activeProcessing<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">ProcessingMetrics</span><span class="token punctuation">(</span><span class="token class-name">MeterRegistry</span> meterRegistry<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>processedFiles <span class="token operator">=</span> <span class="token class-name">Counter</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token string">&quot;pointcloud.processed.total&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;处理的点云文件总数&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>meterRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>processingTime <span class="token operator">=</span> <span class="token class-name">Timer</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token string">&quot;pointcloud.processing.duration&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;点云处理耗时&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>meterRegistry<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>activeProcessing <span class="token operator">=</span> <span class="token class-name">Gauge</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token string">&quot;pointcloud.processing.active&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;当前处理中的任务数&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>meterRegistry<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">ProcessingMetrics</span><span class="token operator">::</span><span class="token function">getActiveTaskCount</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">recordProcessedFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        processedFiles<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Timer<span class="token punctuation">.</span>Sample</span> <span class="token function">startProcessingTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Timer</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>processingTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-结构化日志" tabindex="-1"><a class="header-anchor" href="#_2-结构化日志"><span>2. 结构化日志</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Slf4j</span></span>
<span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProcessingLogger</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logProcessingStart</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskId<span class="token punctuation">,</span> <span class="token class-name">String</span> algorithm<span class="token punctuation">,</span> <span class="token keyword">long</span> fileSize<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;开始处理点云数据 - taskId: {}, algorithm: {}, fileSize: {}&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">                taskId<span class="token punctuation">,</span> algorithm<span class="token punctuation">,</span> fileSize<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logProcessingComplete</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskId<span class="token punctuation">,</span> <span class="token keyword">long</span> duration<span class="token punctuation">,</span> <span class="token class-name">ProcessingResult</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;点云处理完成 - taskId: {}, duration: {}ms, success: {}, outputSize: {}&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">                taskId<span class="token punctuation">,</span> duration<span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">isSuccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span><span class="token function">getOutputSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logProcessingError</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskId<span class="token punctuation">,</span> <span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;点云处理失败 - taskId: {}, error: {}&quot;</span><span class="token punctuation">,</span> taskId<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="部署与运维-🛠️" tabindex="-1"><a class="header-anchor" href="#部署与运维-🛠️"><span>部署与运维 🛠️</span></a></h2><h3 id="docker化部署" tabindex="-1"><a class="header-anchor" href="#docker化部署"><span>Docker化部署</span></a></h3><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker"><pre><code class="language-docker"><span class="line"><span class="token instruction"><span class="token keyword">FROM</span> openjdk:11-jre-slim</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装Python环境</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> apt-get update &amp;&amp; apt-get install -y python3 python3-pip</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> requirements.txt /app/</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> pip3 install -r /app/requirements.txt</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 复制应用</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> target/reconstruction-service-*.jar /app/app.jar</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> algorithms/ /app/algorithms/</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">EXPOSE</span> 8080</span></span>
<span class="line"></span>
<span class="line"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;java&quot;</span>, <span class="token string">&quot;-jar&quot;</span>, <span class="token string">&quot;app.jar&quot;</span>]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器编排" tabindex="-1"><a class="header-anchor" href="#容器编排"><span>容器编排</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token comment"># docker-compose.yml</span></span>
<span class="line"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.8&#39;</span></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">reconstruction-service</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">build</span><span class="token punctuation">:</span> .</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;8080:8080&quot;</span></span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> DB_HOST=mysql</span>
<span class="line">      <span class="token punctuation">-</span> REDIS_HOST=redis</span>
<span class="line">      <span class="token punctuation">-</span> MQ_HOST=rabbitmq</span>
<span class="line">    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> mysql</span>
<span class="line">      <span class="token punctuation">-</span> redis</span>
<span class="line">      <span class="token punctuation">-</span> rabbitmq</span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> reconstruction_data<span class="token punctuation">:</span>/data</span>
<span class="line">      </span>
<span class="line">  <span class="token key atrule">mysql</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql<span class="token punctuation">:</span><span class="token number">8.0</span></span>
<span class="line">    <span class="token key atrule">environment</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> MYSQL_ROOT_PASSWORD=password</span>
<span class="line">      <span class="token punctuation">-</span> MYSQL_DATABASE=reconstruction_db</span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> mysql_data<span class="token punctuation">:</span>/var/lib/mysql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结与思考-💭" tabindex="-1"><a class="header-anchor" href="#总结与思考-💭"><span>总结与思考 💭</span></a></h2><p>通过这个项目，我深刻体会到了Spring Boot在处理复杂业务场景时的优势：</p><ol><li><strong>开发效率高</strong>: 自动配置和起步依赖大大减少了配置工作</li><li><strong>性能优异</strong>: 通过合理的架构设计和优化，能够处理大规模数据</li><li><strong>扩展性好</strong>: 微服务架构便于后续功能扩展</li><li><strong>运维友好</strong>: 丰富的监控和日志功能便于问题定位</li></ol><p>下一步计划：</p><ul><li>引入Spring Cloud实现真正的微服务架构</li><li>集成Kubernetes进行容器编排</li><li>添加机器学习模型服务支持</li></ul><hr><p>这个项目让我更加坚定了从事Java后端开发的决心。将学术研究与工程实践结合，不仅能够解决实际问题，还能提升自己的技术能力。</p><blockquote><p>就像御坂美琴的电磁炮一样，技术的力量需要在实践中才能真正发挥作用！⚡</p></blockquote>`,39)]))}const o=s(t,[["render",l]]),u=JSON.parse('{"path":"/posts/article1.html","title":"Spring Boot在三维数据处理系统中的应用实践 ☕","lang":"zh-CN","frontmatter":{"date":"2024-01-15T00:00:00.000Z","category":["Java技术"],"tag":["Spring Boot","后端开发","微服务"]},"git":{"updatedTime":1755348634000,"contributors":[{"name":"Misaka","username":"Misaka","email":"your-email@example.com","commits":1,"url":"https://github.com/Misaka"}],"changelog":[{"hash":"fe7910109b45f19e6aa70a60b1fe56f0e634bf59","time":1755348634000,"email":"your-email@example.com","author":"Misaka","message":"🎉 初始化御坂美琴的技术博客"}]},"filePathRelative":"posts/article1.md"}');export{o as comp,u as data};
